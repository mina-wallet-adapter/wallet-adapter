{"/docs/design":{"title":"Design","data":{}},"/docs/design/hook":{"title":"Hook","data":{}},"/docs/design/style":{"title":"Style","data":{}},"/docs/design/architecture":{"title":"Architecture","data":{}},"/docs/design/binding":{"title":"UI Bindings","data":{"":"The Mina Wallet Adapter is available in multiple JavaScript frameworks.\nSvelte\nReact\nVue (coming soon)\nAngular (coming soon)"}},"/docs/design/component":{"title":"Components","data":{"":"This consists of 4 primary components.","1-connect-button#1. Connect Button":"This serves as the entry button to connect a wallet. When clicked, it opens either the Welcome Modal if no wallet is detected or the Select Modal if any wallet is detected. After wallet connection, the button displays the connected account address truncated for the UI (i.e., B62qo7...F5dJSu). Clicking the connected button will present the Dropdown Menu for further options.","2-welcome-modal#2. Welcome Modal":"Displayed when no wallet is detected, the Welcome Modal presents a redirect button to the Mina Protocol official guide page for installing wallets and a configurable list of links to the websites of popular Mina wallets.","3-select-modal#3. Select Modal":"This is shown when at least one wallet is detected as installed. It displays a button list of wallets supported by the zkApp. Detected wallets are sorted to the top of the list for easy access. Click any of the wallets in the list to trigger a connection flow.","4-context-menu#4. Context Menu":"Available after a wallet is connected, this dropdown contains menu options to copy the connected wallet address to the clipboard, connect to another wallet, and disconnect."}},"/docs/design/wallet-standard":{"title":"Wallet Standard","data":{"":"These are Mina Protocol specific extensions to the Wallet Standard.","standard-extensions#Standard Extensions":"The Wallet Standard Extensions for Mina Protocol are defined as follows:","namespaces#Namespaces":"mina:","chains#Chains":"mina:mainnet\nmina:devnet\nmina:berkeley","features#Features":"mina:signMessage\nmina:signTransaction\nmina:sendTransaction\nmina:signAndSendTransaction","source-code#Source code":"mina-wallet-standard"}},"/docs/faq":{"title":"Frequently Asked Questions","data":{"":"See the guide Mina Wallet Adapter for zkApps.\nSee the guide Mina Wallet Adapter for wallets.\nSee the How to build guide."}},"/docs/guide/build":{"title":"Build project workspace locally","data":{"prerequisite#Prerequisite":"The following programs are necessary to build this project.\nNode 16 or newer\nNPM","clone-the-git-repository-and-change-to-the-project-directory#Clone the git repository and change to the project directory":"git clone https://github.com/mina-wallet-adapter/wallet-adapter.git\ncd wallet-adapter","install-project-dependencies#Install project dependencies":"npm install\npnpm install\nyarn install\nbun install","build-all-packages-in-the-project-workspace#Build all packages in the project workspace":"npm run build\npnpm run build\nyarn build\nbun run build","preview-the-project-site#Preview the project site":"This will spin up a local server that can be accessed at localhost:3000.\nnpm run preview\npnpm run preview\nyarn preview\nbun run preview"}},"/docs/guide/quickstart":{"title":"Quickstart","data":{"":"There are two possible options to quickly add the Mina Wallet Adapter to your zkApps.","option-1-starter-kits#Option 1: Starter-Kits":"The easiest way to start using the Mina Wallet Adapter is to build upon the starter-kit projects. There are starter-kits for various JavaScript frameworks; choose any compatible with your zkApp.\nnpx degit mina-wallet-adapter/starter-kit-react my-zkapp\ncd my-zkapp\nnpx degit mina-wallet-adapter/starter-kit-svelte my-zkapp\ncd my-zkapp","option-2-manual-installation#Option 2: Manual Installation":"Manually add the Mina Wallet Adapter to your pre-existing zkApp project.","add-dependency#Add dependency":"Install the following dependency in your project. Only a single package is required.\nnpm install @mina-wallet-adapter/ui-react\npnpm add @mina-wallet-adapter/ui-react\nyarn add @mina-wallet-adapter/ui-react\nbun add @mina-wallet-adapter/ui-react","import-components#Import components":"the default mode requires just WalletProvider and WalletMultiButton. The wallet-adapter.css file is optional and just for the default theme. Feel free to customize its CSS styles or replace the file with a project-specific stylesheet.\nimport { WalletProvider, WalletMultiButton } from \"@mina-wallet-adapter/ui-react\";\nimport \"@mina-wallet-adapter/ui-react/dist/wallet-adapter.css\";","use-in-app#Use in App":"Use WalletProvider as the root of your App to set up the necessary context object for your React app.\nThe WalletMultiButton shows the user a button to connect and a modal to select available wallets from. It automatically uses the connection state to display appropriate components.\nfunction App() {\n  return (\n    <WalletProvider>\n      <WalletMultiButton />\n      <YourApp />\n    </WalletProvider>\n  );\n}\nWrap your app with the WalletProvider so that you can use other components and hooks underneath it.","thats-it#That's it":"You can now start adding the useWallet hook for more advanced features.","add-dependency-1#Add dependency":"Install the following dependency to your project. Only a single package is required.\nnpm install @mina-wallet-adapter/ui-svelte\npnpm add @mina-wallet-adapter/ui-svelte\nyarn add @mina-wallet-adapter/ui-svelte\nbun add @mina-wallet-adapter/ui-svelte","import-components-1#Import components":"The default mode requires just WalletProvider and WalletMultiButton. The wallet-adapter.css file is optional and just for the default theme. Feel free to customize its CSS styles or replace the file with a project-specific stylesheet.\nimport { WalletProvider, WalletMultiButton } from \"@mina-wallet-adapter/ui-svelte\";\nimport \"@mina-wallet-adapter/ui-svelte/dist/wallet-adapter.css\";","use-in-app-1#Use in App":"Use WalletProvider to set up the necessary context and common configurations.\nThe WalletMultiButton shows the user a button to connect and a modal to select available wallets from. It automatically uses the connection state to display appropriate components.\n  <WalletProvider />\n  <WalletMultiButton />\n  <YourApp />","thats-it-1#That's it":"You can now start adding the walletStore store for more advanced features."}},"/docs/guide/wallet":{"title":"Mina Wallet Adapter for wallets","data":{"how-to-use-with-existing-wallets#How to use with existing wallets":"WIP ...","how-to-use-with-new-wallets#How to use with new wallets":"WIP ..."}},"/docs/guide/zkapp":{"title":"Mina Wallet Adapter for zkApps","data":{"":"This guide provides a quick setup for integrating the Wallet Adapter into a zkApp, utilizing any of the supported frontend frameworks mentioned below.","supported-frontend-frameworks#Supported frontend frameworks":"Svelte\nReact\nVue (coming soon)\nAngular (coming soon)\nVanila JS (coming soon)","svelte#Svelte":"Follow the steps below to seamlessly integrate the Wallet Adapter into your zkApp with just a few lines of code. Refer to the example starter project for the complete reference source code.","usage-steps#Usage steps":"Install dependency. Only a single package is required.\nnpm install @mina-wallet-adapter/ui-svelte\npnpm add @mina-wallet-adapter/ui-svelte\nyarn add @mina-wallet-adapter/ui-svelte\nbun add @mina-wallet-adapter/ui-svelte\nImport wallet components and store. Import the CSS file for the default theme. Feel free to customize the CSS styles or replace it with a project-specific stylesheet.\nimport { WalletProvider, WalletMultiButton, walletStore } from \"@mina-wallet-adapter/ui-svelte\";\nimport \"@mina-wallet-adapter/ui-svelte/dist/wallet-adapter.css\"; // Default style. Feel free to customize for project-specific look.\nUtilize the components as HTML elements within the page document. Pass the list of wallet adapters to display as a parameter to the WalletProvider component. The WalletMultiButton component will show the \"Connect Wallet\" button and handle the entire connection workflow.\n<div>\n  <WalletProvider autoConnect={true} />\n  <WalletMultiButton />\n</div>\nGet the wallet connection state and invoke connected wallet methods through the walletStore.\n<div>\n  {#if $walletStore.connected}\n    <p>Connected. Wallet address is {$walletStore.publicKey}.</p>\n    <button on:click={async () => await walletStore.signTransaction(...)}>Sign a Transaction</button>\n  {:else}\n    <p>You are not connected. Click \"Connect Wallet\" button to connect.</p>\n  {/if}\n</div>","react#React":"WIP.."}},"/docs/integrations":{"title":"Integrations Showcase","data":{"":"List of wallets and zkApp projects supporting Mina Wallet Adapter.","wallets#Wallets":"","zkapps#zkApps":""}},"/docs/intro":{"title":"Intro","data":{"":"The Mina Wallet Adapter offers a toolkit for integrating wallet support into zkApps. It comprises modular components and hooks designed for zkApps to seamlessly interact with all major wallets in the Mina Protocol ecosystem. This adapter provides reusable interfaces that facilitate interoperability between zkApps and wallets.Written in TypeScript, the Mina Wallet Adapter enables adding wallet support to zkApps with just a few lines of code.","core-features#Core Features":"Auto-detection of installed wallets\nAutomatic wallet state management\nQuery hooks and modular UI components for zkApps\nWallet Standard support\nWritten in TypeScript with support for multiple JS frameworks like React, Svelte, and more","roadmap-features#Roadmap Features":"The following features are planned and coming soon.\nMina Wallet Provider APIs (RFC-0008, RFC-0009 and RFC-0010) compatibility\nIntegration with the .mina domain (Mina Names Service)\nCustomizable UI with light and dark modes, and themable styles","demo#Demo":"Check out the demo site below to see the Wallet Adapter in action.ðŸ‘‰ zkApp Starter Kit"}},"/docs/starter":{"title":"Starter Kits","data":{}},"/docs/starter/react":{"title":"Starter Kit for zkApps written in React","data":{}},"/docs/starter/svelte":{"title":"Starter Kit for zkApps written in Svelte","data":{}},"/":{"title":"Index","data":{}}}